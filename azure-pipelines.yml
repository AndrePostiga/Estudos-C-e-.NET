# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


variables:
  someVariable: '1.0.0'

trigger:
  branches:
    include:
    - release/*  
    - hotfix/*
    - develop
  tags:
    include: 
    - '*'

pr:
  branches:
    include:
    - develop
    - master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildApp
  jobs:
  - job: UpdateBuildVersion
    workspace:
      clean: all
    variables: 
      current_counter: $[counter(variables['Build.SourceBranchName'], 1)]    
    steps:
    - bash: |
        if [[ "$(Build.SourceVersionMessage)" =~ "hotfix/" ]];
        then 
            echo "##vso[task.setvariable variable=IsHotfix;isOutput=true]true"
            echo "##vso[task.setvariable variable=PreviousPrefix;isOutput=true]hotfix"
        else
            echo "##vso[task.setvariable variable=IsHotfix;isOutput=true]false"
            echo "##vso[task.setvariable variable=PreviousPrefix;isOutput=true]release"
        fi
        if [[ "$(Build.SourceBranch)" =~ "/hotfix/" ]] ||
           [[ "$(Build.SourceBranch)" =~ "/release/" ]]; 
        then
            echo "Generate Preview Release Version"
            echo "Version: $(Build.SourceBranchName)"
            echo "         $(Build.SourceBranchName)-preview.$(current_counter)"
            echo "##vso[build.updatebuildnumber]$(Build.SourceBranchName)-preview.$(current_counter)"
            echo "##vso[task.setvariable variable=PureVersion;isOutput=true]$(Build.SourceBranchName)"
        elif [[ "$(Build.SourceBranch)" =~ "/tags/" ]];
        then
            echo "Generate Release Version"
            echo "Version: $(Build.SourceBranchName)"
            echo "##vso[build.updatebuildnumber]$(Build.SourceBranchName)"
            echo "##vso[task.setvariable variable=SonarMasterWhenTag;isOutput=true]sonar.branch.name=master"
            echo "##vso[task.setvariable variable=PureVersion;isOutput=true]$(Build.SourceBranchName)"
        else
            echo "Generate Development Version"
            echo "##vso[build.updatebuildnumber]$(Build.BuildNumber)-develop"
            echo "Version: $(Build.BuildNumber)-develop"
        fi
      displayName: Update Version Number
      name: UpdateBuildVersionTask
  - job: TestCounter
    workspace:
      clean: all
    variables:      
      current_counter: $[counter(variables['someVariable'], 1)] 
      IsHotfix: $[ dependencies.UpdateBuildVersion.outputs['UpdateBuildVersionTask.IsHotfix'] ]
      PreviousPrefix: $[ dependencies.UpdateBuildVersion.outputs['UpdateBuildVersionTask.PreviousPrefix'] ]
      PureVersion: $[ dependencies.UpdateBuildVersion.outputs['UpdateBuildVersionTask.PureVersion'] ]
      updatebuildnumber: $(build.updatebuildnumber)
      #Branch name is the last path segment in the ref ex: refs/heads/release/1.0.1 will be 1.0.1
    steps:
    - script: |
        echo Hello, world! 
        echo $(someVariable)
        echo $(current_counter)
        echo "is hot fix $(IsHotfix)"
        echo "previous prefix $(PreviousPrefix)"
        echo "pure version $(PureVersion)"
        echo "updatebuildnumber: $(updatebuildnumber)"
        echo "source branch name $(Build.SourceBranchName)"
      displayName: 'Run a one-line script' 


